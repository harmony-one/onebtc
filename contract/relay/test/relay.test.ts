import chai from "chai";
import { solidity } from "ethereum-waffle";
import { Relay } from "../typechain/Relay"
import { ErrorCode } from './util';
import { RelayFactory } from "../typechain/RelayFactory";
import { Arrayish } from "ethers/utils";
import * as bitcoin from 'bitcoinjs-lib';
import { HarmonyDeployWallet, HarmonyTransactionOverrides } from "../scripts/hmy_config";
import { WaitForNextBlocks } from "./util";

chai.use(solidity);
const { expect } = chai;

async function deploy(header: Arrayish, height: number) {
  const factory = new RelayFactory(HarmonyDeployWallet);
  let relay =  factory.deploy(header, height, HarmonyTransactionOverrides);
  await WaitForNextBlocks(1)
  return relay
}

describe("Relay", () => {
  beforeEach(async () => {
    relay = await deploy(genesisHeader, genesisHeight);
    let filter = relay.filters.StoreHeader(genesisHash, genesisHeight);
    let foundEmittedEvent = false
    await relay.deployTransaction.wait(1).then((receipt) => {
      receipt.logs?.forEach((event) => {
        if (event.address == filter.address && event.topics.sort().join() === filter.topics?.sort().join()){
          foundEmittedEvent = true
        }
      })
    })
    if (!foundEmittedEvent) {
      throw "relay did not emit storage of genesis header"
    }
  });

  let relay: Relay;
  let genesisHeader = "0x00000020db62962b5989325f30f357762ae456b2ec340432278e14000000000000000000d1dd4e30908c361dfeabfb1e560281c1a270bde3c8719dbda7c848005317594440bf615c886f2e17bd6b082d";
  let genesisHash = "0x4615614beedb06491a82e78b38eb6650e29116cc9cce21000000000000000000";
  let genesisHeight = 562621;

  it("should store genesis header", async () => {
    const height = await relay.getBlockHeight(genesisHash);
    expect(height).to.eq(genesisHeight);
  });

  it("should fail with duplicate genesis header submission", async () => {
    let result = relay.submitBlockHeader(genesisHeader);
    await expect(result).to.be.revertedWith(ErrorCode.ERR_DUPLICATE_BLOCK);
  });

  let header562622 = "0x000000204615614beedb06491a82e78b38eb6650e29116cc9cce21000000000000000000b034884fc285ff1acc861af67be0d87f5a610daa459d75a58503a01febcc287a34c0615c886f2e17046e7325";

  it("should store next header (562622) & reject duplicate", async () => {
    await relay.submitBlockHeader(header562622);
    await WaitForNextBlocks(1)
    await expect(relay.submitBlockHeader(header562622)).to.be.revertedWith(ErrorCode.ERR_DUPLICATE_BLOCK);
  });

  it("should fail with block header size > 80", async () => {
    let result = relay.submitBlockHeader(header562622 + "123");
    await expect(result).to.be.revertedWith(ErrorCode.ERR_INVALID_HEADER_SIZE);
  });

  it("should fail with block header size < 80", async () => {
    let result = relay.submitBlockHeader(header562622.substring(0,28));
    await expect(result).to.be.revertedWith(ErrorCode.ERR_INVALID_HEADER_SIZE);
  });

  let header562623 = "0x00000020b8b580a399f4b15078b28c0d0bba705a6894833b8a490f000000000000000000b16c32aa36d3b70749e7febbb9e733321530cc9a390ccb62dfb78e3955859d4c44c0615c886f2e1744ea7cc4";

  it("should fail because prev block not stored", async () => {
    let result = relay.submitBlockHeader(header562623);
    await expect(result).to.be.revertedWith(ErrorCode.ERR_PREVIOUS_BLOCK);
  });

  it("should fail with low difficulty", async () => {
    let fakeGenesis = {
      "hash": "0x00000000000000000012af6694accf510ca4a979824f30f362d387821564ca93",
      "height": 597613,
      "merkleroot": "0x1c7b7ac77c221e1c0410eca20c002fa7b6467ba966d700868928dae4693b3b78",
      "header": "0x00000020614db6ddb63ec3a51555336aed1fa4b86e8cc52e01900e000000000000000000783b3b69e4da28898600d766a97b46b6a72f000ca2ec10041c1e227cc77a7b1c6a43955d240f1617cb069aed"
    }
    let fakeBlock = {
      "hash": "0x000000000000000000050db24a549b7b9dbbc9de1f44cd94e82cc6863b4f4fc0",
      "height": 597614,
      "merkleroot": "0xc090099a4b0b7245724be6c7d58a64e0bd7718866a5afa81aa3e63ffa8acd69d",
      "header" : "0x0000002093ca64158287d362f3304f8279a9a40c51cfac9466af120000000000000000009dd6aca8ff633eaa81fa5a6a861877bde0648ad5c7e64b7245720b4b9a0990c07745955d240f16171c168c88"
    }
    relay = await deploy(fakeGenesis.header, fakeGenesis.height);
    await WaitForNextBlocks(1)
    let result = relay.submitBlockHeader(fakeBlock.header);
    await expect(result).to.be.revertedWith(ErrorCode.ERR_LOW_DIFFICULTY);
  });
});

describe("Relay (Batch)", () => {
  beforeEach(async () => {
    relay = await deploy('0x' + headers[0], genesisHeight);
  });

  let relay: Relay;
  let genesisHeight = 1780500;
  let headers = [   // testnet: 1780500..1780600
    "00000020626148e2b1dcddb0c1627b80828ad15b82938fa75c685b98c7499880000000009299e7d2ad1c49f128157f547a67bb77a62c98be495be5e6cd987437c4b721df83cf0a5f107e0e193122a605",
    "000000202853c5b4973950d61ce2f48285a6c29334d9e1925a18fc310200000000000000d7d2a2e673b2f50a711224802c590e48c0b7e44489339a14fbb121b8b70e998635d40a5fffff001d0e4a958c",
    "00000020d359a65227e5a2026ed62bb8b64b9c3d0dda958bbe4f32860a3b65f800000000709524e20ca410fa467cd9f2a02bee6ae408d49d8b1e2e2364034687b1f47ca8d7d40a5f107e0e1996a3fdee",
    "000000202f32b9c714efda810046a166b0311f75668a5010547d9f1f0100000000000000a7825bb600834a1e3f2aaf1594ab30d6455b435dad7774c9400acd6b89bfdc9989d90a5fffff001d2d3b289f",
    "00000020a302f19330cd52a2320f24b5e53e47a66191b6927f38e9f44b2f549600000000995c648f45f1a3f529612813324bbde342898e3819e773b2b4351e37d54a04183ade0a5fffff001d0b481eda",
    "00000020beb737685f6da4b10e88683557dc54af2855a9607643cf41cd552dc50000000033d847a094897a48c9200cf13c10d7e8ac28ce93887429987943f3ecd66343b7ebe20a5fffff001d0e9ec4e0",
    "00000020b1dfe807731a83f8b0f39b262648be8e20a194ee4e1297b2f00a7d7800000000d0dcdbb1a447538146ee68dd9111c295ab887e308e2735217a7f511c60e245909ee70a5fffff001d87f0f86b",
    "00000020b4181ecfa8c88fee87d6f2823cb3a04bb225900c8a31f3cbfc70840e000000009e6c71eb18ab0b39eabe5290c1d278025e83ffb9676ed531a6414af10807ad8750ec0a5fffff001d0a274262",
    "00000020644775410fc2066dfa8894a4fe9274a51be71e475852ae09ba3dd3f900000000e1041313aa7c2f2dad08aa78d9d0fd2f1aa4d55d2f09f3e5a7dcd678887efeeb01f10a5fffff001daf0ff7c4",
    "000000200742b49269f9c65cb9ab6d27f5c031d5d789f31f17b01ee588b6fb89000000009ef8c04d13b830d3ee8ec094c202eba1934c0b8c9cf22100e676893c50c6b5d5b3f50a5fffff001d81e243c5",
    "0000002074a9d851ad8118c8c92b9dd096eb6557fd5b5b80ba0d74a9f711fa65000000000d9f9c45bf1875e4fbea0382c5bbb8990332e1abf6397db651c0c03f221584e367fa0a5fffff001d2392b556",
    "0000002035ebf879e09ec830a2d963b02dcf4d0ff72279fda56ef4c34cc0afea000000001352033cecbfc1c97ae8e4aaed43eb39b93b65ebc11bdebee34026d0f063d40318ff0a5fffff001d22c4bc83",
    "00000020ca3e46d396130a17dc9c304c32e67f22288384d747423efeb5e918a700000000661c31ae745587bb08a400611d5738581d5be560ae1316428e1f38d138a7262cca030b5fffff001da2b64f51",
    "000000200852be052e3c0ef8aa2a9fcfd9021732d96baf35ee94647bd0c34e1800000000c6ff703fe4d1b6aa1b625a269077364d171378a719d48477a9a50c1314c4ca2a7d080b5fffff001d1e9e152a",
    "00000020837cf782bb2465122999c4d19fb5755aa1adb266ee552054da75242a00000000f3fc1b282e083fc33b94e52a90bacb64fe8ffb5ffd7d8c095560eaa91097c5902f0d0b5fffff001d0c81bd0a",
    "0000002051a8ed7d4177104d9eafa18f379dbd4e0886652332377aecabd1032700000000566b967563bddf5b696f3ebf969baa9282309ddebe8a457abf125393ea0fc29a510e0b5f107e0e193964f2c3",
    "00000020bdf2de83e95a397b287017a9a0decf8c6069d6d6e922e0610400000000000000302bc0bb9de04245ddab6a2064d1e978a767a3dc5aee0e0fd1b4b5af4a1bf2ea5d100b5f107e0e192556c6e0",
    "00e0ff2790ac5cf4b63eb808e3f021ffee83c6637d507c1c93a4d2c109000000000000004c4821628b002b17749a01bf3f79cc7658adf52949e44964f48117e26b67c25f73140b5f107e0e1914066404",
    "00000020c0852219eab15c561f238a6a8b2242b18c4817a0e00602bc0400000000000000602f385b29fb7f9b40ae5e15ad59e80202629dcf6207fe106303543c4c51df2b24190b5fffff001da610ef06",
    "00000020608404966fcd3b2f97b155afb04d26389b2b529623c483e4add06c6700000000e7fae80dc7e40532795f4634a1d083d0f5b7468cf9080627ff807101566dfef2d61d0b5fffff001d2db9e521",
    "000000202ebaae5122118aa3fdcec0e0ba61b99dc65884a4bf6dcaa7afd8fa6900000000bde3eb5f01d9718ac86a9a01780582d12b39a241ffee7ff01b2436ceed29db1d88220b5fffff001dab46279b",
    "000000207cc4b9e89fa603317abb78ae94d1cc7487b58940fa46e368694f823200000000324a285cd7f0e9961427caf1be22414e4293b511f61ce3f48c289e2c5812c1793b270b5fffff001d301395e8",
    "00000020ef46ec28a09b248fbe65e440174296c130de267ccfdba77e0177165f000000008df6695bb4f238b1b7ef07c56e029aac2edef970687d78096a4a4bd5f596cbdf25290b5f107e0e19bdb7861c",
    "0000002007c0291b890f76b9342782ab851c06e42d4383c1acfe1a9c0700000000000000a9aa3687f31ae057d4220ef65998ca6e4fe93f242a4d28f7fd6122939f2d5a84d72d0b5fffff001da539cb60",
    "00000020316d46ef8509c6afc518cfcca13238065985fc2777af20876fd1d7360000000061c8d68b2ffe8c01921fc8a32334bbc08d9157873ab1c4da2ae3c16c10cfaf5f8a320b5fffff001d0100e049",
    "000000203850ac2a138c71242c033b48203a191278825f840ce231c3df8eb4610000000048b721b6efe9ff9da40c6c0a677003883564f15be50426870f0a1b3ce0bc9a0e3e370b5fffff001d9045be51",
    "00000020fcfed939f6bea39df7c9eb20cfe307d2d94b71df1c12d0de1154edf600000000501c74196849d90f75fcee1ec892cc5ea68741252be2bf3772b3d00c1bd3279bfd390b5f107e0e1968dad059",
    "0000002038bf1ecfe5f83b4c6666d803228811903697248e44f8b4400a0000000000000063ad01ed7e62f86b383d20bd2973eaeec1834139ee05ffc7cd3612631091a28dae3e0b5fffff001dbc697593",
    "00000020468d51b568188fd39a9244c65ff06201b924b18ebd50b96d587c7a8500000000e7159432b1a23222966f2072e51dd8817dc636c60fdb25faa025bdde3e596f3461430b5fffff001d9885f636",
    "00e0ff37a57253f40008e881519f5f617434203b1008b562f7d23e0799c316cd00000000c30eed58ca067252a08ed3e46c0cc3ea9ebd243ed1391154d15a76215b60a4adf7430b5f107e0e19d92a2dc8",
    "00000020a110ab26e1c4bc8908559cf5ea0ce45f73ea96c1e8ba1b26090000000000000009eb9ddd4189d17c69d3b80cbc8c7739c508609be4f0d561c00bfef3041a2c70a9480b5fffff001d025c8dac",
    "00000020399ae4aa1fb27f35f2231e12c6d8249dba076d6a29f90108f8d2b2de00000000cdb7ad2f3cd48047d3f257a2716be46c448aa7c2c8670c8c56e7ec5488a006ff5a4d0b5fffff001dbb70351f",
    "0000002054e411ba52631b1c092cf8c0c0284dbfb2faf26d961b7aa179ba4672000000000f5096808a003d6fe6773170a670946eda9930bfa28be0102595e8c37d8cdd4418500b5f107e0e19ec4b68ab",
    "00e0ff2f84f74ed59157973e91896ab3b56785b0ffb408e16b3c900a0500000000000000a031b66e38089ac690aa29caf3492d9c914a2b6e635bad3afc83d0d2137048d827510b5f107e0e199425776e",
    "00000020cb9cdef440ae0e1708156c510cd05de687479eabb863ae8a030000000000000011043ac4d163b8b10df4167132322a3e25151e51f3a0d2e14f818038c8ba746cd9550b5fffff001da4d83e65",
    "000000207d633ca954e1c2f8eafd3ae6dcd7fde0c6784b28e6838e0b88ce872d000000004ee638145f36da7de43829400dc880969121f62f7d4915a11ef6f584f7450e0c8c5a0b5fffff001d838d1798",
    "000000207f80c35c01c8cb114682df93771575435dfcc43c2325e0f71d4be08400000000fcb7c7df4d4aeabde13e152cbf3227b4788f7e96f8239581ade4a052fd5028b73e5f0b5fffff001d892faae1",
    "000000202b3ead2a8dd4a297035a7de2ea31ab861f2cff7a388c076bbee980810000000049d6e32d26daa1d71bdaf54a79215e08b4f05c601b26eff6aec8bc7278eb1f23f55f0b5f107e0e19a2323a0d",
    "00000020c2e48f660f6547ce07ad83e10b4fde8564c64a65f3f410bc0d00000000000000e17d188d112ac1651b27710e4832b3ded1ed2a48722be0b46d66de096dc2bae486600b5f107e0e19bdb69143",
    "000000203ec4b6596b8cd7204e820c9c10afae0925767a78c20621c90b000000000000006fa53717c2bef3d8cc5acfbebce34a5fa09d43373a8f106d289717840331bbcb5f630b5f107e0e1940200a27",
    "00000020830dcd38de9a482a74b8ff203c20322141d7af4dd4daf1960800000000000000b5b441cc945363f8ee15e0e1192a34de6c5dbcc73a8ca879496f8bcec4a32ef7a9650b5f107e0e199a1580ab",
    "00000020764ff65a216b965df52b95bd12217fc46026a6dc3d2a997b0a00000000000000eca755b9d209c3acf35187ff55e6da617aab3cb92ffe3fccc6deffbe1a897d875a6a0b5fffff001d9fb20da1",
    "000000207a5b2541d37604f75bf754c3efaf03be2552f7d60e3a0041a0d48cc4000000008fcbf7f06c20c2064328cb547f20c61b9bc25fdbfdc266ef6de460631ff13494cb6c0b5f107e0e195a8ba5ee",
    "00000020a7c3212f717c97159f5ae503b91a2ca76b0784df9a85c6b209000000000000003d2a1095f5afb0ea17c2760f09bb636d83712c81e9a9e5ccef1def040e8c6af87c710b5fffff001d0d8fb5ae",
    "0000002096b857513eeb58bb7d091cba750a40e9ee53d22dc5f34f506d14bbdf000000000fdfaa43bd841dd9ab59ca08181b2085790b21b9483b456130d28a1cf977a2ce2d760b5fffff001d9a6342d4",
    "00000020c3071c77db7ecfaa6217d522470aa2a743c27cbbb59846d236647a28000000005d29222006807dcbc6e1fb6c195ce8fc12b26e157a60ef591afc08604afc6a4cde7a0b5fffff001d93cfee6b",
    "000000202c00c39c057b21fa01ee371536dc2f8f793a5b7788934ae47687e40e000000006b8b55120f9007ba3ea2e132a5f06439763c7859edfc9319443ba16c1e2546316f7c0b5f107e0e191809dd4e",
    "000000209c6308f7544ba7036bc0fe8344e4bd7678b76893d9695ec00c0000000000000074bd3fe9b3f619042202dc7ab2d2b9c05672dc49fd01b4d1c21a356caae34071e07e0b5f107e0e19ddf8485c",
    "00000020fcea69398a4442081e7aa8e4acd091c72a82b4ca0c769f860300000000000000babc803ead2e3d9a5795281e47f3a27cfde6aeb357a681c3fc171598d8b863a892830b5fffff001d94371b66",
    "0000002027e8441a973d351f6fba2b4c848ab0367368de04c3c4a854916e5c89000000001d233c19800a237cd60783445e31442a6bc08f3424b0e1034ac6adfff46fd55044880b5fffff001db4f126a1",
    "000000203817ad719141165efe95391d1ffac4be2f8a72c92ce6b3c75a6dbd69000000008ea35a49b7cd5f102726b328c9d7bbc9c79fb193a7ebfccf07b95b1880cb6b92f78c0b5fffff001d3b36b386",
    "0000002084c8978238e0cf20f495df222187678c06f93faf0eba81928d463184000000005426b92c9d201202661f6f78d7ae0aebf05b10c30bfe0a64c321cab0c22d727385900b5f107e0e19d881d6cd",
    "0000002075c6ddf9178da0b953e50ab0bd87c60c55883294a28d521e0800000000000000f38a60b0618793f7786f4c25b5953e09e16cd468a212fdcd1b5639cf5d41ec3a37950b5fffff001dab2cd55b",
    "00000020aa83e392b182c4a6a4083e4214515cd5ab74c2619b0345cb033c5beb0000000086c15e4dd36daae91dc21b3d918a852116e5819d22527722339cc4748c32b942e8990b5fffff001d80e7dbb3",
    "00000020bbf04fb6cafb55624463c26b75edc2af8de282ed72f9bb09e1d0eb7400000000aff0853e76d5db22ce119a74727692b98891ffb163c4e843f0b33d38a0be99e79e9d0b5f107e0e19f1b7a561",
    "0000002064189419b1e252e27224efc504fab4354f0d5d0e357abf200c00000000000000cf1f6cb37e3cdc6a8672692357a601574f4064a59f8c458490a1d4ff6598fd333b9f0b5f107e0e190f020532",
    "00000020f3d0621eb61621d324fdb3110bd0cb98fe841e305b7ba56907000000000000001fbd86c53eb6f72f00698c0b1e5c79b42e768afe4a3a8f9a6247393417030070eca30b5fffff001d3b733000",
    "00e0ff370f1cc3fb1a138de5879e24ff4860a7b3db3dbd781e2ab2906d269ea900000000f69c8e5cdaf53829a43518f5dcbec614868317d41d4608b70e414996677f3f8a80a80b5f107e0e19d908f894",
    "00000020c6579415929eba0c66e72aaca673f3ab4cff4b9cf6992f290e00000000000000f4c80a75216e7f42f19223c0c4b5fd65654c8a74e7a5ee275e4040843c1a0be531ad0b5fffff001d84fb165b",
    "000000202d91d0263befba2ffba64c180330e74b12d4f548a3bccea3abd91f1200000000c4315d3468d97ab7a8c3a272d1a44ae8017bac6b49bad039cee3a9c06bee0306e4b10b5fffff001d1192286c",
    "000000208cddc3ca48a8053d4fbfe102eb2166471648bc2fdd4edd444caf6bab000000000ca65f70e938ab1cce5e02115dade2b0ce3a7074609bdc21851c56a5ded0b6ba96b60b5fffff001da0bda924",
    "00000020ac3fd9c3d1b00117c692c89ebc5cf1989cc6bc878b461c21b883728a00000000204ddfaca36d58c4f890871f69e57c18c5bb44cc4a23e9e13f03dac1240769f448bb0b5fffff001d2949c7c5",
    "00000020dbf15ef31767d35f2cfe8225a4d92e72b2ff3070ce4faaceb80e303300000000e1f872a213d928c89b6188a6b1c7d2746df0a00a05398301cc7e4687aa5f8a2df9bf0b5fffff001d35731a09",
    "0000002065866f585f17bea38bec57564b500df3e069ce03803963331f4f23cd00000000d3e41ca875af3abcec5cc9f2d81b49acf6cef2d2bd4028c4deb97ab9cfec9c80aac40b5fffff001dd4ab1c89",
    "0000002011a79b41822c4ca1d10965a91e4d4e1677db59e51f8a0771ca52385e0000000019b6b24985417db221e2a3cce2fc42d57fb151519cfac6b871c34f43235ad48cc8c50b5f107e0e19f293bf20",
    "00000020855166e5aa384dd70087fdb883e9398790eca2309e8d92e60800000000000000dfa1fbf4c6e13f8b025b131d20318d2e1992d920c3da3925804afecb96e0336c48c70b5f107e0e1951c563e8",
    "00000020d59b1e204dd2a39a1d75bc0bab18eae5d81836114db2f83e0900000000000000f570fe8da37d27b14175dfbb342b46f22c4282d464718e42b079a72777cad5ebf9cb0b5fffff001d3dc960d1",
    "00000020b4ccf9af326e89bfcc0b118b95a497ca798c80f4a593fc17db81ce1a00000000f6c8267a866a6d9fc1b102759432a9871f8c5ff29fbd7f8f818799cec1d9ce3aacd00b5fffff001d801b1e2a",
    "000000200ff9551b875e75483d11f7f46451bb7d1a3309067560526a61e5e4e600000000bde0e838d924e376021ef4c316e0911c11ddd8dc6e5d3cc3a6742791205bfca75ed50b5fffff001d00b576ac",
    "000000204fda7e169ded7d663a08a40a6b7846ddfd43fa71f2f321fcc2de79ac0000000018b6f7dc31858183d8dea23f13ef4ebbcb936ecc4a709a3f333b12ad143b463a15d80b5f107e0e19b8561111",
    "000000202e3da45405804daf42424b71a4030392cbbdff2c05aa71dd010000000000000012b3b637bbf8b6e42179684fd03c02093a1650620ff99adca67a608480c1166dc7dc0b5fffff001dbaa3cc0a",
    "00000020aa65635f3f9b553e637e35e8676262b6950b850589a3240a53d5fe270000000053d7cf8855be86eff69e1e8c8c58c29891389e1b078c216107408c4e7e617e6a79e10b5fffff001db864476a",
    "0000002005ba1186e8e2f06ff9606016d5b2895703e9f99b48de6aa53b7927730000000034cc8077e7978bc4d1597057c7d952f6793548d0f1a24af441491a275077e1892ae60b5fffff001d8a32d529",
    "00000020b77f4c20f3d2dbd5dd1136f18e30484d3da287f051c01aacfea333c7000000004ba3e1bbdd0799df86d1528404b5e1710f4fc93b9e30123c89bcabaefcafde52dbea0b5fffff001d23f35f52",
    "00000020a8d2dc7287d51daa365aeaa88017a50d7f82eba45a4a9aeeaa42cc090000000076c2f253267474c3812e55ac3e53cee838cdc55e05a10811c2924b4caa9c53c48cef0b5fffff001d1881bd8f",
    "000000207b07668150f2e17d18d70fa8789ed406ad31ccc962049534477ca55100000000e5061885fd662d27a7bb662f8811e080bc9ad4a57c52618a3955fd0386283bda3ff40b5fffff001da90e8de8",
    "000000203ee1ffe8680cc3c505d62fd5fbf5bd2430e9b5d36d87eeb04ecd9db800000000481850c5b466260c16a4093724edc17fa36a1bced63aa11f492bb55c3815141a8ff80b5f107e0e19f437ba62",
    "00000020b99317e3de29a7dee70a809fc2e70c3ac3a24e853c54652f0200000000000000a98004dfd88cdf3257d69711eb79a20a9734d6e4a6cb50facb34cc7994e0aad940fd0b5fffff001d36eca21f",
    "00000020219b165707dc67a2cb25a4424fa0e82af3a18575a08600c6a163e97b000000005235cc0479b99f41658cb84155c57004c43ae55f2c763883e122e94e63e7f44bf3010c5fffff001d3746226d",
    "000000204af32a565b18f7d98a5cb0982601d4b1adc850ebf317311f9ed5632500000000030859da6c856af0f0e8acddf7dcc9e0b5b5d47968d2c9bbe7c4d58d7449c483a5060c5fffff001d0f7ea10a",
    "00000020d11b224f3ba325211819f53c2d12ba06021996eee5679fdfe432293f000000004c5deb0564d3a758c575a2a9be5ddaafc0116bf6a189018173ae70ae334593c8580b0c5fffff001d8bfee02d",
    "000000206020d9252495b7c89abb66a476a44d2afaa871ced922148615bc586200000000c0cd9e90ee964c016688d5dc3e54996b2dbf0d6eb3dacfda9f83d9239c932ced250c0c5f107e0e1974b99b8b",
    "00000020201a8ae47743af261af7ed63cc40bd53c9f98c7f4f3a05bc030000000000000077527275b5c41a692f476fcd18c43c2c2b69c5f6907de4ccb73e9d36fa4c7828d6100c5fffff001dbd0c664e",
    "00e0ff2f4d71140236a8b3ed2489840af2aa3fe803296354c3d4e79827a5f2e3000000000a5a5e56c2730667e21fd9713b86d6ae25a5987ae04aed0d755bde254a5df76e6b150c5f107e0e19525d6ba4",
    "0000002067e08add1b9c0cc0f75495f3105dedfee6113f40146713030400000000000000d28dc33eed95ba57e2e3b04e16140fd1e6792ceadb5a88bab6abf403c44fa4751c1a0c5fffff001d9af62952",
    "00000020614e31d8797aad751d0a96ac558d2af5b75b8fa656e86ae215635fea0000000091332f48c3d8666afb1149fb5d4c6788016c6c3ef21890e590a32c8d13c27f51ce1e0c5fffff001da80cfe6a",
    "00000020c23c4a337626c788e6502dd9729d9efeebc0d8a702a3c5cfbfacb1740000000099e69526a1441fe9c876017b89bf7d7805cbb7af294686149c3f5290f4b48bed0b220c5f107e0e19bd8aca72",
    "000000207b41026173d3ba04613e03eb968cbc71efe7f4f38cc1a58b030000000000000010e8d5c4567c8a634aa89f01473583bdf583f227ab651e6f8da1d364ac6c5b78bc260c5fffff001da556d970",
    "000000206d033d2a32833ef0725d6b3bb161a802413cf689675c3dc338ae14bb0000000091d63795048f585d27218719df2d9610930838d060dc65f3d8b7cd10fb2a39ac6e2b0c5fffff001d81dd3182",
    "00000020c63ae53f37793c65398b359f87658184920f34abd3f44b2d359cd7f40000000073d5a12799ac075cd7976f25459aca3fb439fcd9a170ff8e0bf3b7ebd174703022300c5fffff001d00babe84",
    "00000020cad36d868f157493ffc65586843b60d7b2abc552b51cc1b5f0b39e98000000004acb2fcf9ec1d0c415cecff80792144db3ebfd66b4258900a425250fde3d77b8d4340c5fffff001d1e2ab936",
    "00000020bc6172c9947cb83ab9d0e4aa8df79f666ef41ebd4d7664859dddd5fe00000000149ea9f9c2815bb3ab951fb83943a71629aa04279c5475edbba5d79b3b3b8ddeae350c5f107e0e194b5ccca7",
    "00000020239c8c37d22e780af861d5c343addc0e76f045651f18057109000000000000000fe9006bffd1767d5ae4c99532dbca74f93123062df2798fe6ad02c721bebbe25f3a0c5fffff001d13d3d08f",
    "000000204c9038f6106e61c36140f472510e5be75ad8d6566b60c391e20668eb00000000140a03aa37efebf0faccc9ed24a6d60c422ea1df336915087e601cf7934174f8f83d0c5f107e0e1944bae361",
    "0000002008cf666fd73e510faaa7b90ae09579595c4105376af41c740d00000000000000c4ba374ae1a45a10c01f093402bf791148baeebda235664e01170490ca6b1845213e0c5f107e0e1927c406cc",
    "0000002029ba9267986eff2e6934a0c679d8e68996d24b8326ba10860a00000000000000708e2e0820876b03c82a6188e97e3ef77c147b8032a4bcf9773bf2bd8785123ad2420c5fffff001dadc0beda",
    "000000207624c17243e56f622e8f5685ab51f44e97622b756ec1382e3cf65dcc00000000ae09a803125635057e7480823581869f5917f80db98c5c3cd4d8a60c708f3beb84470c5fffff001d8946e3e1",
    "0000002026d73a7527402391b523e354d996f335f3d133c4586d12a1bd2ec5c100000000ea42cde4ab437ced3b7902bcda6f69dac08a03ce849e7a25c281f97cc9862731364c0c5fffff001d3b3f744b",
    "00e0ff377e4e85afd6ab1ba9e4e8c6d8d091f72e315745ca52d22dacdb7efa87000000007e8198d5048c56ea9080f92efa598bf7d90e5d4c7c378f5819fafff0df5a307f814d0c5f107e0e19d0fe2631",
    "000000206f3dcf3a5b9d26250a8d985eb2fa8850bdbd8390dad9c1fa000000000000000028c9f071e3d6966bce8788d428c0c0cbe3114bf3f27fa2ffd2057a68f872766b32520c5fffff001d06f4fa04",
    "0000002071588ebb39e550a42baf80d4c850d7246933c8ffb0f533ce26d3a3a9000000001247ccb2ed4d424f28cd39d325ae4b82dc3a33d79570ec364b235e07261ec5b3e4560c5fffff001d1ba4e6d7",
  ];

  it("should store genesis", async () => {
    let hash = bitcoin.crypto.hash256(Buffer.from(headers[0], 'hex')).toString('hex');
    let height = await relay.getBlockHeight('0x' + hash);
    expect(height).to.eq(genesisHeight);
  });

  it("should store 2 headers", async () => {
    await relay.submitBlockHeaderBatch(headers.slice(1, 3).reduce((prev, curr) => {
      return Buffer.concat([
        prev, Buffer.from(curr, 'hex'),
      ]);
    }, Buffer.alloc(0)));
  });

  it("should store 4 headers", async () => {
    await relay.submitBlockHeaderBatch(headers.slice(1, 5).reduce((prev, curr) => {
      return Buffer.concat([
        prev, Buffer.from(curr, 'hex'),
      ]);
    }, Buffer.alloc(0)));
  });

  it("should store 8 headers", async () => {
    await relay.submitBlockHeaderBatch(headers.slice(1, 9).reduce((prev, curr) => {
      return Buffer.concat([
        prev, Buffer.from(curr, 'hex'),
      ]);
    }, Buffer.alloc(0)));
  });

  it("should store 16 headers", async () => {
    await relay.submitBlockHeaderBatch(headers.slice(1, 17).reduce((prev, curr) => {
      return Buffer.concat([
        prev, Buffer.from(curr, 'hex'),
      ]);
    }, Buffer.alloc(0)));
  });

  it("should store 32 headers", async () => {
    await relay.submitBlockHeaderBatch(headers.slice(1, 33).reduce((prev, curr) => {
      return Buffer.concat([
        prev, Buffer.from(curr, 'hex'),
      ]);
    }, Buffer.alloc(0)));
  });

  it("should fail with duplicate batch", async () => {
    let rawHeaders = headers.slice(1, 7).reduce((prev, curr) => {
      return Buffer.concat([
        prev, Buffer.from(curr, 'hex'),
      ]);
    }, Buffer.alloc(0));

    await relay.submitBlockHeaderBatch(rawHeaders);
    await WaitForNextBlocks(1)
    let result = relay.submitBlockHeaderBatch(rawHeaders);
    await expect(result).to.be.revertedWith(ErrorCode.ERR_DUPLICATE_BLOCK);
  });

  it("should fail because prev block not stored", async () => {
    let result = relay.submitBlockHeaderBatch(headers.slice(2, 8).reduce((prev, curr) => {
      return Buffer.concat([
        prev, Buffer.from(curr, 'hex'),
      ]);
    }, Buffer.alloc(0)));
    await expect(result).to.be.revertedWith(ErrorCode.ERR_PREVIOUS_BLOCK);
  });
});